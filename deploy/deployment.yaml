apiVersion: apps/v1
kind: Deployment
metadata:
  name: omni-orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      component: omni-orchestrator-server
  template:
    metadata:
      labels:
        component: omni-orchestrator-server
    spec:
      initContainers:
        - name: init-cassandra
          image: busybox:1.28
          command: [ "sh", "-c", "until nslookup omni-cassandra.omni-orchestrator.svc.cluster.local; do echo waiting for cassandra service ; sleep 2; done;" ]
        - name: prepare-keyspace
          image: opensourceway/omni-orchestrator:960aa021baf3f021d0bdca3df7fd310405aa982d
          command: ["/app/omni-orchestrator", "db-init", "--schemaFile", "/app/cassandra/keyspace.cql"]
          volumeMounts:
            - mountPath: /app/config/app.toml
              name: config-volume
              subPath: app.toml
        - name: prepare-schema
          image: opensourceway/omni-orchestrator:960aa021baf3f021d0bdca3df7fd310405aa982d
          command: [ "migrate", "-source", "file:///app/cassandra/migrations", "--database", "cassandra://omni-cassandra.omni-orchestrator.svc.cluster.local:9042/omni_orchestrator", "up"]
      containers:
        - image: opensourceway/omni-orchestrator:960aa021baf3f021d0bdca3df7fd310405aa982d
          imagePullPolicy: Always
          name: omni-orchestrator-server
          livenessProbe:
            httpGet:
              path: "/v1/health"
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: "/v1/health"
              port: 8080
            initialDelaySeconds: 20
            failureThreshold: 1
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 2000m
              memory: 2000Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: APP_ENV
              value: prod
          volumeMounts:
            - mountPath: /app/config/app.toml
              name: config-volume
              subPath: app.toml
            # used for job templates, update this when template files add or removed
            - mountPath: /app/config/templates/buildimagefromrelease/
              name: job-templates-volume-buildimagefromrelease
      serviceAccountName: omni-orchestrator
      volumes:
        - name: config-volume
          configMap:
            name: omni-orchestrator-config
        - name: job-templates-volume-buildimagefromrelease
          configMap:
            name: omni-orchestrator-templates-buildimagefromrelease
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omni-cassandra
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      component: omni-cassandra-server
  template:
    metadata:
      labels:
        component: omni-cassandra-server
    spec:
      containers:
        - image: cassandra:4.0
          imagePullPolicy: Always
          name: omni-cassandra-server
          livenessProbe:
            tcpSocket:
              port: 9042
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9042
            initialDelaySeconds: 20
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 4000m
              memory: 4000Mi
          ports:
            - containerPort: 9042
              name: db
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/cassandra
              name: data-volume
      serviceAccountName: omni-orchestrator
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: omni-orchestrator-data
